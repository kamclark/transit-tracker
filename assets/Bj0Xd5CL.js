import{d as V,r as n,k,J as S,o as $,x as i,y as l,z as a,K as B,L as O,M as c,N as v,A as o,O as A,P as m,D as L}from"./28To1Jia.js";const U={class:"app-container p-lg bg-primary text-text-med font-base"},F=["value"],z={key:0,class:"coord-display mb-lg"},G={class:"coord mb-xs text-text-high"},I={class:"coord text-text-high"},J={key:1,class:"coord-display mb-lg"},K={key:2,class:"station-info card mb-lg"},P={class:"station-name text-text-high"},R={key:3,class:"station-info card mb-lg"},q={class:"arrival-section card mb-lg"},H={class:"arrival-list"},Q={class:"arrival-status text-text-low ml-xs"},W={key:0,class:"arrival-item p-sm bg-surface rounded-md mb-xs text-text-high"},X={class:"arrival-section card mb-lg"},Y={class:"arrival-list"},Z={class:"arrival-status text-text-low ml-xs"},tt={key:0,class:"arrival-item p-sm bg-surface rounded-md mb-xs text-text-high"},st=V({__name:"index",setup(et){const d=n(null),u=n(null),p=n(!1),x=n(null),h=n(null),b=n(null),f=n(!1),y=[{name:"cribbo 🏠",coords:{latitude:40.0298,longitude:-75.181}},{name:"30th Street Station",coords:{latitude:39.9556,longitude:-75.182}},{name:"Suburban Station",coords:{latitude:39.9543,longitude:-75.1657}},{name:"Temple University",coords:{latitude:39.9801,longitude:-75.1541}}],g=n("0");function _(){d.value=y[Number(g.value)].coords}async function D(s,t){try{const e=await fetch(`https://corsproxy.io/?https://www3.septa.org/api/locations/get_locations.php?lat=${s}&lon=${t}&type=rail_stations`),[r]=await e.json();return r}catch(e){console.log("e"),console.log(e)}return null}async function M(s){const e=`https://corsproxy.io/?https://www3.septa.org/api/Arrivals/index.php?station=${encodeURIComponent(s)}`,r=await fetch(e);if(!r.ok)throw new Error(`Failed to load arrivals: ${r.status}`);const j=await r.json(),C=Object.values(j).flatMap(E=>E.flatMap(T=>Object.values(T).flat()));h.value=C}const w=k(()=>(h.value??[]).filter(s=>s.direction==="N")),N=k(()=>(h.value??[]).filter(s=>s.direction==="S"));return S(()=>d.value,async s=>{if(s){p.value=!0,x.value=null;try{u.value=await D(s.latitude,s.longitude)}catch(t){x.value=t.message}finally{p.value=!1}}},{immediate:!0}),S(()=>u.value,async s=>{if(s){f.value=!0,b.value=null;try{M(s.location_name)}catch(t){b.value=t.message}finally{f.value=!1}}},{immediate:!1}),n("Northbound"),n(20),$(async()=>{_()}),(s,t)=>(l(),i(c,null,[a("div",U,[t[5]||(t[5]=a("h1",{class:"heading-primary mb-md text-text-high"}," Transit Tracker ",-1)),t[6]||(t[6]=a("label",{for:"debug-location",class:"label mb-sm font-medium text-text-high"}," Debug Location ",-1)),B(a("select",{id:"debug-location",class:"select-input mb-md p-sm bg-surface text-text-high rounded-md","onUpdate:modelValue":t[0]||(t[0]=e=>g.value=e),onChange:_},[t[1]||(t[1]=a("option",{disabled:"",value:""},"Select Location",-1)),(l(),i(c,null,v(y,(e,r)=>a("option",{key:r,value:r},o(e.name),9,F)),64))],544),[[O,g.value]]),d.value?(l(),i("div",z,[a("p",G," 📍 latty: "+o(d.value.latitude),1),a("p",I," 📍 longi: "+o(d.value.longitude),1)])):(l(),i("div",J,t[2]||(t[2]=[a("p",{class:"coord text-text-high"},"Grabbing lo…",-1)]))),u.value?(l(),i("div",K,[t[3]||(t[3]=a("h2",{class:"station-heading mb-sm text-text-high"}," Nearest station ",-1)),a("p",P,o(u.value.location_name)+" ("+o(u.value.location_id)+") ",1)])):(l(),i("div",R,t[4]||(t[4]=[a("h2",{class:"station-heading mb-sm text-text-high"}," Nearest Station (loading) ",-1),a("p",{class:"station-name text-text-high"}," Lorem not located ipsum. ",-1)])))]),a("section",q,[t[7]||(t[7]=a("h2",{class:"arrival-heading mb-sm text-text-high"}," thissaway Arrivals ",-1)),a("ul",H,[(l(!0),i(c,null,v(m(w),e=>(l(),i("li",{key:e.train_id,class:"arrival-item p-sm bg-surface rounded-md mb-xs text-text-high"},[L(o(e.depart_time.split(" ")[1])+" – "+o(e.origin)+" → "+o(e.destination)+" ",1),a("small",Q," ("+o(e.status)+") ",1)]))),128)),m(w).length?A("",!0):(l(),i("li",W," No thissaway trains in the next window. "))])]),a("section",X,[t[8]||(t[8]=a("h2",{class:"arrival-heading mb-sm text-text-high"}," thatway Arrivals ",-1)),a("ul",Y,[(l(!0),i(c,null,v(m(N),e=>(l(),i("li",{key:e.train_id,class:"arrival-item p-sm bg-surface rounded-md mb-xs text-text-high"},[L(o(e.depart_time.split(" ")[1])+" – "+o(e.origin)+" → "+o(e.destination)+" ",1),a("small",Z," ("+o(e.status)+") ",1)]))),128)),m(N).length?A("",!0):(l(),i("li",tt," No thatway trains in the next window. "))])])],64))}});export{st as default};
